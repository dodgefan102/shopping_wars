{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kyle\\\\Desktop\\\\local_projects\\\\Shopping_list\\\\client\\\\components\\\\list.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { useFocusEffect } from '@react-navigation/native';\nexport default (function (props) {\n  var items = props.items;\n  var animValues = {};\n  items.map(function (i, idx) {\n    animValues[idx] = new Animated.Value(0);\n  });\n\n  var animate = function animate() {\n    var createAnimation = function createAnimation(value) {\n      return Animated.timing(value, {\n        toValue: 1,\n        duration: props.timing || 500\n      });\n    };\n\n    var animations = [];\n    items.map(function (i, idx) {\n      animations.push(createAnimation(animValues[idx]));\n    });\n    Animated.stagger(props.stagger || 100, animations).start();\n  };\n\n  useFocusEffect(function () {\n    for (var key in animValues) {\n      animValues[key] = new Animated.Value(0);\n    }\n\n    animate();\n  }, []);\n  return React.createElement(ScrollView, {\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: props.refreshing,\n      onRefresh: props.refresh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, props.items.map(function (item, idx) {\n    return React.createElement(Animated.View, {\n      style: _objectSpread(_objectSpread({}, props.style), {}, {\n        opacity: animValues[idx]\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, React.createElement(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        props.press(item.id);\n      },\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        flexDirection: \"row\",\n        padding: 5,\n        borderColor: 'grey',\n        borderWidth: 1,\n        borderRadius: 10,\n        margin: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontSize: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    }, item.name), React.createElement(Text, {\n      style: {\n        color: 'red',\n        fontSize: 13\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    }, \"     ( \", item.quantity, \" )\"))));\n  }));\n});","map":{"version":3,"sources":["C:/Users/Kyle/Desktop/local_projects/Shopping_list/client/components/list.js"],"names":["React","useFocusEffect","props","items","animValues","map","i","idx","Animated","Value","animate","createAnimation","value","timing","toValue","duration","animations","push","stagger","start","key","refreshing","refresh","item","style","opacity","press","id","flex","justifyContent","alignItems","flexDirection","padding","borderColor","borderWidth","borderRadius","margin","color","fontSize","name","quantity"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ScrollView, View, Text, RefreshControl, TouchableWithoutFeedback, Animated } from 'react-native';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\n\r\nexport default (props)=>{\r\n    const items=props.items\r\n    const animValues={};\r\n    items.map((i,idx)=>{\r\n        animValues[idx]=new Animated.Value(0)\r\n    })\r\n    // const animValues=useRef(Animated.Value(0)).current\r\n\r\n    const animate=()=>{\r\n        const createAnimation=(value)=>{\r\n            return Animated.timing(value,{\r\n                toValue:1,\r\n                duration:props.timing||500\r\n            })\r\n        }\r\n        const animations=[];\r\n        items.map((i,idx)=>{\r\n            animations.push(createAnimation(animValues[idx]))\r\n        })\r\n\r\n        Animated.stagger(props.stagger||100,animations).start()\r\n    }\r\n    useFocusEffect(()=>{\r\n        for(let key in animValues){\r\n            animValues[key]=new Animated.Value(0)\r\n        }\r\n        animate();\r\n    },[])\r\n\r\n    return(\r\n        <ScrollView refreshControl={\r\n            <RefreshControl refreshing={props.refreshing} onRefresh={props.refresh}/>\r\n        }>\r\n            {props.items.map((item,idx)=>(\r\n                <Animated.View\r\n                    style={{\r\n                        ...props.style,\r\n                        opacity: animValues[idx],  \r\n                    }}>\r\n                    <TouchableWithoutFeedback onPress={()=>{props.press(item.id)}} key={idx} >\r\n                        <View style={{flex:1,justifyContent:\"space-between\",alignItems:\"center\",flexDirection:\"row\",padding:5, borderColor:'grey',borderWidth:1, borderRadius:10, margin:2}}>\r\n                            <Text style={{color:'white', fontSize:20}}>{item.name}</Text>\r\n                            <Text style={{color:'red',fontSize:13}}>     ( {item.quantity} )</Text>\r\n                        </View>\r\n                    </TouchableWithoutFeedback>\r\n                </Animated.View>\r\n            ))}\r\n        </ScrollView>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}